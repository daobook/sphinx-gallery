# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2022, Sphinx-gallery developers
# This file is distributed under the same license as the Sphinx-Gallery
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx-Gallery 0.10.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-11 00:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../auto_examples/plot_3_capture_repr.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_auto_examples_plot_3_capture_repr.py>` to download the"
" full example code or to run this example in your browser via Binder"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:24
msgid "Capturing output representations"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:26
msgid ""
"This example demonstrates how the configuration ``capture_repr`` "
"(:ref:`capture_repr`) works. The default ``capture_repr`` setting is "
"``capture_repr: ('_repr_html_', '__repr__')`` and was used when building "
"the Sphinx-Gallery documentation. The output that is captured with this "
"setting is demonstrated in this example. Differences in outputs that "
"would be captured with other ``capture_repr`` settings is also explained."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:35
msgid ""
"Nothing is captured for the code block below because no data is directed "
"to standard output and the last statement is an assignment, not an "
"expression."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:56
msgid "If you did wish to capture the value of ``b``, you would need to use:"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:74
#: ../../auto_examples/plot_3_capture_repr.rst:177
#: ../../auto_examples/plot_3_capture_repr.rst:265
msgid "Out:"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:85
msgid ""
"Sphinx-Gallery first attempts to capture the ``_repr_html_`` of ``b`` as "
"this is the first 'representation' method in the ``capture_repr`` tuple. "
"As this method does not exist for ``b``, Sphinx-Gallery moves on and "
"tries to capture the ``__repr__`` method, which is second in the tuple. "
"This does exist for ``b`` so it is captured and the output is seen above."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:91
msgid ""
"A pandas dataframe is used in the code block below to provide an example "
"of an expression with a ``_repr_html_`` method."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:155
msgid ""
"The pandas dataframe ``df`` has both a ``__repr__`` and ``_repr_html_`` "
"method. As ``_repr_html_`` appears first in the ``capture_repr`` tuple, "
"the ``_repr_html_`` is captured in preference to ``__repr__``."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:159
msgid ""
"For the example below, there is data directed to standard output and the "
"last statement is an expression."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:189
msgid "Statsmodels tables should also be styled appropriately:"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:226
msgid ""
"``print()`` outputs to standard output, which is always captured. The "
"string ``'Hello world'`` is thus captured. A 'representation' of the last"
" expression is also captured. Again, since this expression ``a + b`` does"
" not have a ``_repr_html_`` method, the ``__repr__`` method is captured."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:232
msgid "Matplotlib output"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:234
msgid ""
"Matplotlib function calls generally return a Matplotlib object as well as"
" outputting the figure. For code blocks where the last statement is a "
"Matplotlib expression, a 'representation' of the object will be captured,"
" as well as the plot. This is because Matplotlib objects have a "
"``__repr__`` method and our ``capture_repr`` tuple contains ``__repr__``."
" Note that Matplotlib objects also have a ``__str__`` method."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:241
msgid ""
"In the example below, ``matplotlib.pyplot.plot()`` returns a list of "
"``Line2D`` objects representing the plotted data and the ``__repr__`` of "
"the list is captured as well as the figure:"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:276
msgid ""
"To avoid capturing the text representation, you can assign the last "
"Matplotlib expression to a temporary variable:"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:300
msgid ""
"Alternatively, you can add ``plt.show()``, which does not return "
"anything, to the end of the code block:"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:326
msgid "The ``capture_repr`` configuration"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:328
msgid ""
"The ``capture_repr`` configuration is ``('_repr_html_', '__repr__')`` by "
"default. This directs Sphinx-Gallery to capture 'representations' of the "
"last statement of a code block, if it is an expression. Sphinx-Gallery "
"does this according to the order 'representations' appear in the tuple. "
"With the default ``capture_repr`` setting, ``_repr_html_`` is attempted "
"to be captured first. If this method does not exist, the ``__repr__`` "
"method would be captured. If the ``__repr__`` also does not exist "
"(unlikely for non-user defined objects), nothing would be captured. For "
"example, if the the configuration was set to ``'capture_repr': "
"('_repr_html_')`` nothing would be captured for example 2 as ``b`` does "
"not have a ``_repr_html_``. You can change the 'representations' in the "
"``capture_repr`` tuple to finely tune what is captured in your example "
"``.py`` files."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:341
msgid ""
"To only capture data directed to standard output you can set "
"``capture_repr`` to be an empty tuple: ``capture_repr: ()``. With this "
"setting, only data directed to standard output is captured. For the "
"examples above, output would only be captured for example 4. Although the"
" last statement is an expression for examples 2, 3 and 4 no "
"'representation' of the last expression would be output. You would need "
"to add ``print()`` to the last expression to capture a 'representation' "
"of it. The empty tuple setting imitates the behaviour of Sphinx-Gallery "
"prior to v0.5.0, when this configuration was introduced."
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:353
msgid "**Total running time of the script:** ( 0 minutes  0.725 seconds)"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst
msgid "Launch binder"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:375
msgid ""
":download:`Download Python source code: plot_3_capture_repr.py "
"<plot_3_capture_repr.py>`"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:381
msgid ""
":download:`Download Jupyter notebook: plot_3_capture_repr.ipynb "
"<plot_3_capture_repr.ipynb>`"
msgstr ""

#: ../../auto_examples/plot_3_capture_repr.rst:388
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

